name: Download and Push XCFramework from AWS CodeArtifact

on:
  push:
    branches:
      - feat/cd  # Trigger on push to the main branch (adjust as needed)
  repository_dispatch:
    types: [trigger-lambda-action]
  workflow_dispatch:  # Manual trigger

permissions:
    id-token: write   # This is required for requesting the JWT
    contents: write

jobs:
  download-xcframework:
    runs-on: ubuntu-latest
  
    steps:
      # Step 1: Checkout the repository to make modifications
      - name: Checkout repository
        uses: actions/checkout@v3
      # Step 2: Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::003367508252:role/github-devops-tools"
          aws-region: "us-east-1"
          audience: "sts.amazonaws.com"

      # Step 3: Download the zipped XCFramework from AWS CodeArtifact
      - name: Download XCFramework from CodeArtifact
        run: |
          aws codeartifact get-package-version-asset \
            --domain caf \
            --domain-owner 003367508252 \
            --repository development \
            --package ios-documentdetector \
            --package-version 1.0.2 \
            --asset ios-documentdetector \
            --format generic \
            --namespace swift \
            DocumentDetector.zip
      - name: Check Content inside actual folder
        run: ls
      - name: Unzip Donwloaded Package
        run: unzip DocumentDetector.zip -d ./  # Specify where to unzip
      - name: Print content inside folder
        run: ls
        #Step  4: Push changes to git
      - name: Commit and Push Changes
        run: |
          git config --global user.name "combateafraude-bot"
          git config --global user.email "administrator@combateafraude.com"
          
          # Add the extracted files to the git staging area
          git add DocumentDetector.xcframework  # Add the extracted files

          # Commit the changes
          git commit -m "Add XCFramework package"

          # Push changes to the repository
          git push origin feat/cd  # Push to the main branch (adjust as needed)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
